AUDIO RECORD TEST

Basic Audio Record and Playback Code Skeleton

Our project requirement is entirely different but we will be using this as the baseline for audio/ noise recording.

This is based on a simple example given on the “developer.android” site. This module utilizes user's choice so that he could record and play sound based on the click of a Button. The code can be segmented as follows.

The main functions in the Activity class

onRecord() : Boolean toggling for recording the sound.
private void onRecord(boolean start) {
        if (start) {
            startRecording();
        } else {
            stopRecording();
        }
    }


onPlay() : Boolean toggling for playing the sound.
 private void onPlay(boolean start) {
        if (start) {
            startPlaying();
        } else {
            stopPlaying();
        }
    }


startPlaying() : To obtain file path and start playing the audio content.
private void startPlaying() {
        mPlayer = new MediaPlayer();
        try {
            mPlayer.setDataSource(mFileName);
            mPlayer.prepare();
            mPlayer.start();
        } catch (IOException e) {
            Log.e(LOG_TAG, "prepare() failed");
        }
    }

stopPlaying() : To release the play object instance's memory.
private void stopPlaying() {
        mPlayer.release();
        mPlayer = null;
    }

startRecording() : To set the record object instance's AudioSource as Microphone, the output file format,file name.
private void startRecording() {
        mRecorder = new MediaRecorder();
        mRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
        mRecorder.setOutputFile(mFileName);
        mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);

        try {
            mRecorder.prepare();
        } catch (IOException e) {
            Log.e(LOG_TAG, "prepare() failed");
        }

        mRecorder.start();
    }


stopRecording() : To stop the record object and to release the object instance's memory.
 private void stopRecording() {
        mRecorder.stop();
        mRecorder.release();
        mRecorder = null;
    }

The Inner Class RecordButton

OnClick() : setting the context whether it is recording or not.
 public void onClick(View v) {
                onRecord(mStartRecording);
                if (mStartRecording) {
                    setText("Stop recording");
                } else {
                    setText("Start recording");
                }
                mStartRecording = !mStartRecording;
            }

RecordButton() constructor : for setting the context on the display based on button click for recording.
 public RecordButton(Context ctx) {
            super(ctx);
            setText("Start recording");
            setOnClickListener(clicker);
        }
